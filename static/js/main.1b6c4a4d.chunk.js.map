{"version":3,"sources":["components/EbayOptions.js","components/ProfitBreakdown.js","App.js","reportWebVitals.js","index.js"],"names":["EbayOptions","props","Card","Body","Title","className","Form","Group","controlId","Label","InputGroup","Prepend","Text","id","Control","type","placeholder","aria-describedby","onChange","calculateSellAmount","ProfitBreakdown","netAmount","Row","Col","ebayFeeAmount","payPalFeeAmount","sellAmount","App","useState","setSellAmount","setNetAmount","setEbayFeeAmount","setPayPalFeeAmount","desiredNetAmount","parseInt","document","getElementById","value","newSellAmount","toFixed","Container","md","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6RAqCeA,EAlCK,SAACC,GACjB,OACI,cAACC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,cAACD,EAAA,EAAKE,MAAN,CAAYC,UAAU,cAAtB,0BACA,cAACC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,eAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,mCACA,eAACC,EAAA,EAAD,WACI,cAACA,EAAA,EAAWC,QAAZ,UACI,cAACD,EAAA,EAAWE,KAAZ,CAAiBC,GAAG,qBAApB,iBAEJ,cAACP,EAAA,EAAKQ,QAAN,CAAcC,KAAK,SAASC,YAAY,MAAMC,mBAAiB,qBAAqBC,SAAUjB,EAAMkB,2BAExG,cAACb,EAAA,EAAKM,KAAN,CAAWP,UAAU,aAArB,8ECETe,EAhBS,SAACnB,GACrB,OACI,cAACC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,CAAWE,UAAU,cAArB,UACI,cAACH,EAAA,EAAKE,MAAN,+BACA,qBAAIC,UAAS,qCAAgCJ,EAAMoB,UAAY,eAAiB,IAAhF,mBAA6FpB,EAAMoB,aACnG,eAACC,EAAA,EAAD,CAAKjB,UAAU,aAAf,UACI,eAACkB,EAAA,EAAD,gCAAwBtB,EAAMuB,iBAC9B,eAACD,EAAA,EAAD,kCAA0BtB,EAAMwB,sBAEpC,qBAAIpB,UAAU,UAAd,oBAAgCJ,EAAMyB,oBC2BvCC,MAlCf,WAAgB,IAAD,EACuBC,mBAAS,GADhC,mBACNF,EADM,KACMG,EADN,OAEqBD,mBAAS,GAF9B,mBAENP,EAFM,KAEKS,EAFL,OAG6BF,mBAAS,GAHtC,mBAGNJ,EAHM,KAGSO,EAHT,OAIiCH,mBAAS,GAJ1C,mBAINH,EAJM,KAIWO,EAJX,KAUPb,EAAsB,WAC1B,IAAMc,EAAmBC,SAASC,SAASC,eAAe,gBAAgBC,QAAU,EACpFP,EAAaG,GAGb,IAAMK,EAPY,SAOKL,EARH,IASpBF,GAXc,GAWIO,GAAyBC,QAAQ,IACnDP,GAXgB,KAWKM,EAVD,IAU6CC,QAAQ,IACzEV,EAAcS,EAAcC,QAAQ,KAEtC,OAAO,eAACC,EAAA,EAAD,WACL,oBAAInC,UAAU,yCAAd,6BACA,oBAAIA,UAAU,8CAAd,qCACA,eAACiB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKkB,GAAI,EAAT,SACE,cAAC,EAAD,CAAatB,oBAAqB,kBAAMA,OAE1C,cAACI,EAAA,EAAD,UACE,cAAC,EAAD,CAAiBG,WAAYA,EAAYL,UAAWA,EAAWG,cAAeA,EAAeC,gBAAiBA,aCtBvGiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASC,eAAe,SAM1BM,M","file":"static/js/main.1b6c4a4d.chunk.js","sourcesContent":["import React from 'react'\nimport { Card, Form, InputGroup } from 'react-bootstrap';\n\nconst EbayOptions = (props) => {\n    return (\n        <Card>\n            <Card.Body>\n                <Card.Title className=\"text-center\">Ebay Options</Card.Title>\n                <Form>\n                    <Form.Group controlId=\"net-earnings\">\n                        <Form.Label>Desired Net Earnings</Form.Label>\n                        <InputGroup>\n                            <InputGroup.Prepend>\n                                <InputGroup.Text id=\"net-earnings-input\">$</InputGroup.Text>\n                            </InputGroup.Prepend>\n                            <Form.Control type=\"number\" placeholder=\"400\" aria-describedby=\"net-earnings-input\" onChange={props.calculateSellAmount()} />\n                        </InputGroup>\n                        <Form.Text className=\"text-muted\">\n                            Net earnings of item sold, after all fees considered.\n                    </Form.Text>\n                    </Form.Group>\n                    {/* <Form.Check\n                        type={'checkbox'}\n                        id={'paypal-checkbox'}\n                        label={'Paypal'}\n                        defaultChecked\n                        onChange={props.calculateSellAmount()}\n                    />\n                    <Form.Text className=\"text-muted\">\n                        PayPal fees is 2.9% + $0.30 of the total selling price including the sales tax. This fee is calculated before eBay fees.\n                    </Form.Text> */}\n                </Form>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default EbayOptions\n","import React from 'react'\nimport { Card, Row, Col } from 'react-bootstrap';\n\nconst ProfitBreakdown = (props) => {\n    return (\n        <Card>\n            <Card.Body className=\"text-center\">\n                <Card.Title>Profit Breakdown</Card.Title>\n                <h1 className={`display-2 font-weight-bold ${props.netAmount ? 'text-success' : ''}`}>Net: ${props.netAmount}</h1>\n                <Row className=\"text-muted\">\n                    <Col>Ebay Fee Amount: ${props.ebayFeeAmount}</Col>\n                    <Col>Paypal Fee Amount: ${props.payPalFeeAmount}</Col>\n                </Row>\n                <h2 className='h3 mt-3'>Sell: ${props.sellAmount}</h2>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default ProfitBreakdown\n","import \"./App.css\";\nimport { useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport EbayOptions from './components/EbayOptions'\nimport ProfitBreakdown from './components/ProfitBreakdown'\n\nfunction App() {\n  const [sellAmount, setSellAmount] = useState(0);\n  const [netAmount, setNetAmount] = useState(0);\n  const [ebayFeeAmount, setEbayFeeAmount] = useState(0);\n  const [payPalFeeAmount, setPayPalFeeAmount] = useState(0);\n  const ebayFee = .1;\n  const paypalFee = .029;\n  const paypalFlatFee = .3;\n  const magicNumber = 1.14811;\n\n  const calculateSellAmount = () => {\n    const desiredNetAmount = parseInt(document.getElementById('net-earnings').value) || 0;\n    setNetAmount(desiredNetAmount);\n    // const paypalChecked = document.getElementById('paypal-checkbox').checked;\n    // const newSellAmount = paypalChecked ? (netAmount + (netAmount * totalFeePercent)) + paypalFlatFee : netEarnings * ebayFee;\n    const newSellAmount = (desiredNetAmount + paypalFlatFee) * magicNumber;\n    setEbayFeeAmount((newSellAmount * ebayFee).toFixed(2))\n    setPayPalFeeAmount(((newSellAmount * paypalFee) + paypalFlatFee).toFixed(2))\n    setSellAmount(newSellAmount.toFixed(2));\n  }\n  return <Container>\n    <h1 className=\"display-3 text-center font-weight-bold\">Ebay Net Profit</h1>\n    <h1 className=\"display-3 text-center font-weight-bold mb-4\">Calculator üè∑</h1>\n    <Row>\n      <Col md={4}>\n        <EbayOptions calculateSellAmount={() => calculateSellAmount} />\n      </Col>\n      <Col>\n        <ProfitBreakdown sellAmount={sellAmount} netAmount={netAmount} ebayFeeAmount={ebayFeeAmount} payPalFeeAmount={payPalFeeAmount} />\n      </Col>\n    </Row>\n  </Container>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}